{"ast":null,"code":"var _jsxFileName = \"/Users/fatimamohamedali/Documents/builds/task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Header from \"./Components/Header\";\nimport Tasks from \"./Components/Tasks\";\nimport { useState, useEffect } from \"react\";\nimport AddTask from \"./Components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks');\n      const data = await res.json();\n      console.log(data);\n    };\n\n    fetchTasks();\n  }, []); // Delete a Task\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  }; //   Add Task\n\n\n  const addTask = task => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = {\n      id,\n      ...task\n    };\n    setTasks([...tasks, newTask]);\n  }; //   Toggle Reminder\n\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => task.id === id ? { ...task,\n      reminder: !task.reminder\n    } : task));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 23\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : \"No Tasks to Show\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/fatimamohamedali/Documents/builds/task-tracker/src/App.js"],"names":["React","Header","Tasks","useState","useEffect","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","fetchTasks","res","fetch","data","json","console","log","deleteTask","id","filter","task","addTask","Math","floor","random","newTask","toggleReminder","map","reminder","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,KAAD,CAA9C;AACA,QAAM,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAlC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,UAAU,GAAG,YAAY;AAC7B,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KAJD;;AAMAH,IAAAA,UAAU;AACX,GARQ,EAQN,EARM,CAAT,CAJgB,CAchB;;AACA,QAAMO,UAAU,GAAIC,EAAD,IAAQ;AACzBT,IAAAA,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACF,EAAL,KAAYA,EAAnC,CAAD,CAAR;AACD,GAFD,CAfgB,CAmBhB;;;AACA,QAAMG,OAAO,GAAID,IAAD,IAAU;AACxB,UAAMF,EAAE,GAAGI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAA3B,IAAoC,CAA/C;AACA,UAAMC,OAAO,GAAG;AAAEP,MAAAA,EAAF;AAAM,SAAGE;AAAT,KAAhB;AAEAX,IAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWiB,OAAX,CAAD,CAAR;AACD,GALD,CApBgB,CA2BhB;;;AACA,QAAMC,cAAc,GAAIR,EAAD,IAAQ;AAC7BT,IAAAA,QAAQ,CACND,KAAK,CAACmB,GAAN,CAAWP,IAAD,IACRA,IAAI,CAACF,EAAL,KAAYA,EAAZ,GAAiB,EAAE,GAAGE,IAAL;AAAWQ,MAAAA,QAAQ,EAAE,CAACR,IAAI,CAACQ;AAA3B,KAAjB,GAAyDR,IAD3D,CADM,CAAR;AAKD,GAND;;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAE,MAAKb,cAAc,CAAC,CAACD,WAAF,CAAlC;AAAkD,MAAA,OAAO,EAAEA;AAA3D;AAAA;AAAA;AAAA;AAAA,YADF,EAEGA,WAAW,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEe;AAAhB;AAAA;AAAA;AAAA;AAAA,YAFlB,EAGGb,KAAK,CAACqB,MAAN,GAAe,CAAf,gBACC,QAAC,KAAD;AAAO,MAAA,KAAK,EAAErB,KAAd;AAAqB,MAAA,QAAQ,EAAES,UAA/B;AAA2C,MAAA,QAAQ,EAAES;AAArD;AAAA;AAAA;AAAA;AAAA,YADD,GAGC,kBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD,CA/CD;;GAAMrB,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React from \"react\";\nimport Header from \"./Components/Header\";\nimport Tasks from \"./Components/Tasks\";\nimport { useState, useEffect } from \"react\";\nimport AddTask from \"./Components/AddTask\";\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n\n  useEffect(() => {\n    const fetchTasks = async () => {\n      const res = await fetch('http://localhost:5000/tasks')\n      const data = await res.json()\n      console.log(data)\n    }\n\n    fetchTasks();\n  }, [])\n\n  // Delete a Task\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id));\n  };\n\n  //   Add Task\n  const addTask = (task) => {\n    const id = Math.floor(Math.random() * 10000) + 1;\n    const newTask = { id, ...task };\n\n    setTasks([...tasks, newTask]);\n  };\n\n  //   Toggle Reminder\n  const toggleReminder = (id) => {\n    setTasks(\n      tasks.map((task) =>\n        task.id === id ? { ...task, reminder: !task.reminder } : task\n      )\n    );\n  };\n\n  return (\n    <div className=\"container\">\n      <Header onAdd={()=> setShowAddTask(!showAddTask)} showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask} />}\n      {tasks.length > 0 ? (\n        <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} />\n      ) : (\n        \"No Tasks to Show\"\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}